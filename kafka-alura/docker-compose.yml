version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'

  kafka1:
    image: confluentinc/cp-kafka:5.4.2
    hostname: kafka1
    container_name: kafka1
    labels:
      - 'custom.project=kafkajs'
      - 'custom.service=kafka1'
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092,
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_CREATE_TOPICS: "ECOMMERCE_NEW_ORDER:5:3,ECOMMERCE_SEND_EMAIL:5:3,ECOMMERCE_ORDER_REJECTED:5:3,ECOMMERCE_ORDER_APPROVED:5:3"     
      # suppress verbosity
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: confluentinc/cp-kafka:5.4.2
    hostname: kafka2
    container_name: kafka2
    labels:
      - 'custom.project=kafkajs'
      - 'custom.service=kafka2'
    depends_on:
      - zookeeper
    ports:
      - '29095:29095'
      - '9095:9095'
    environment:
      KAFKA_BROKER_ID: '2'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29095,PLAINTEXT_HOST://localhost:9095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true' 
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_CREATE_TOPICS: "ECOMMERCE_NEW_ORDER:5:3,ECOMMERCE_SEND_EMAIL:5:3,ECOMMERCE_ORDER_REJECTED:5:3,ECOMMERCE_ORDER_APPROVED:5:3"  
      # suppress verbosity
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  kafka3:
    image: confluentinc/cp-kafka:5.4.2
    hostname: kafka3
    container_name: kafka3
    labels:
      - 'custom.project=kafkajs'
      - 'custom.service=kafka3'
    depends_on:
      - zookeeper
    ports:
      - '29098:29098'
      - '9098:9098'
    environment:
      KAFKA_BROKER_ID: '3'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29098,PLAINTEXT_HOST://localhost:9098
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true' 
      KAFKA_CREATE_TOPICS: "ECOMMERCE_NEW_ORDER:5:3,ECOMMERCE_SEND_EMAIL:5:3,ECOMMERCE_ORDER_REJECTED:5:3,ECOMMERCE_ORDER_APPROVED:5:3"  
      # suppress verbosity
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
 
  # kafkahq:
  #     image: tchiotludo/kafkahq
  #     links:
  #       - kafka1
  #       - kafka2 
  #       - kafka3
  #     environment:
  #       KAFKAHQ_CONFIGURATION: |
  #         kafkahq:
  #           connections:
  #             docker-kafka-server-1:
  #               properties:
  #                 bootstrap.servers: "kafka1:9092"
  #             docker-kafka-server-2:
  #               properties:
  #                 bootstrap.servers: "kafka2:9095"
  #             docker-kafka-server-3:
  #               properties:
  #                 bootstrap.servers: "kafka3:9098"
  #     ports:
  #       - 8089:8080
